name: Build and Publish Docker Image

on:
  push:
    branches:
      - main

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_PASSWORD }}

      - name: Create .env file
        run: |
          echo "NEXT_PUBLIC_SANITY_PROJECT_ID=${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}" >> .env
          echo "NEXT_PUBLIC_SANITY_DATASET=${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}" >> .env
          echo "NEXT_PUBLIC_SANITY_API_VERSION=${{ secrets.NEXT_PUBLIC_SANITY_API_VERSION }}" >> .env
          echo "NEXT_PUBLIC_SANITY_API_TOKEN=${{ secrets.NEXT_PUBLIC_SANITY_API_TOKEN }}" >> .env
          echo "NEXT_PUBLIC_OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
          echo "SANITY_API_KEY=${{ secrets.SANITY_API_KEY }}" >> .env
          echo "NEXT_PUBLIC_MAILCHIMP_URL=${{ secrets.NEXT_PUBLIC_MAILCHIMP_URL }}" >> .env
          echo "DB_URI=${{ secrets.DB_URI }}" >> .env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> .env
          echo "NEXTAUTH_URL_INTERNAL=${{ secrets.NEXTAUTH_URL_INTERNAL }}" >> .env
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: linux/arm64/v8
          tags: ${{ env.DOCKER_HUB_USERNAME }}/mywebclass-prod:latest
          build-args: |
            NEXT_PUBLIC_SANITY_PROJECT_ID=${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}
            NEXT_PUBLIC_SANITY_DATASET=${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}
            NEXT_PUBLIC_SANITY_API_VERSION=${{ secrets.NEXT_PUBLIC_SANITY_API_VERSION }}
            NEXT_PUBLIC_SANITY_API_TOKEN=${{ secrets.NEXT_PUBLIC_SANITY_API_TOKEN }}
            NEXT_PUBLIC_OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            SANITY_API_KEY=${{ secrets.SANITY_API_KEY }}
            NEXT_PUBLIC_MAILCHIMP_URL=${{ secrets.NEXT_PUBLIC_MAILCHIMP_URL }}
            DB_URI=${{ secrets.DB_URI }}
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}
            NEXTAUTH_URL_INTERNAL=${{ secrets.NEXTAUTH_URL_INTERNAL }}
            NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}

  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - name: Install Lighthouse
        run: npm install -g lighthouse

      - name: Run Lighthouse audit
        run: |
          lighthouse https://mywebclass.tejpatel.live/en --output html --output-path report.html --chrome-flags="--headless --no-sandbox"

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Lighthouse Report
          path: report.html
